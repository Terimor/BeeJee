{"version":3,"sources":["components/LoginModal.js","Context.js","templates/Header.js","components/EditTextModal.js","components/Task.js","components/AddTaskForm.js","templates/Content.js","App.js","index.js"],"names":["LoginModal","props","login","state","password","axios","post","then","data","result","window","location","reload","alert","message","onHide","Modal","show","this","size","aria-labelledby","backdrop","keyboard","centered","Header","closeButton","Title","id","Body","htmlFor","className","value","onChange","e","setState","target","type","Footer","Button","variant","onClick","React","Component","Context","createContext","is_admin","tasks_per_page","onModalHide","modalShow","onModalShow","icon","context","href","aria-hidden","Navbar","bg","Brand","Nav","contextType","EditTextModal","saveMessage","onEditSave","text","Task","editTask","task","put","modalHide","reloadTasks","completeTask","status","style","backgroundColor","user_name","user_email","is_edited","AddTaskForm","addTask","placeholder","Content","getTasks","page","order","tasks","total_amount","pageChange","orderChange","order_by","direction","map","key","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","length","App","get","Provider","ReactDOM","render","document","getElementById"],"mappings":"gPA8EeA,M,YAxEX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAKVC,MAAQ,WACD,EAAKC,MAAMD,OAAS,EAAKC,MAAMC,SAC9BC,IAAMC,KAAK,iBAAkB,CACzBJ,MAAO,EAAKC,MAAMD,MAClBE,SAAU,EAAKD,MAAMC,WACtBG,MAAK,SAAAC,GACAA,EAAKA,KAAKC,OACVC,OAAOC,SAASC,SAEhBC,MAAML,EAAKA,KAAKM,YAIxBD,MAAM,qFAhBV,EAAKV,MA+DF,CACHD,MAAO,GACPE,SAAU,IApEK,E,sEAuBT,IAAD,OACCW,EAAS,WACX,EAAKd,MAAMc,UAGf,OACI,kBAACC,EAAA,EAAD,CACID,OAAQA,EACRE,KAAMC,KAAKjB,MAAMgB,KACjBE,KAAK,KACLC,kBAAgB,gCAChBC,SAAS,SACTC,UAAU,EACVC,UAAQ,GAER,kBAACP,EAAA,EAAMQ,OAAP,CAAcC,aAAW,GACrB,kBAACT,EAAA,EAAMU,MAAP,CAAaC,GAAG,iCAAhB,6BAIJ,kBAACX,EAAA,EAAMY,KAAP,KACI,0JACA,6BACI,2BAAOC,QAAQ,eAAf,kCACA,2BAAOC,UAAU,eAAeC,MAAOb,KAAKf,MAAMD,MAC3C8B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAChC,MAAO+B,EAAEE,OAAOJ,YAE3D,6BACI,2BAAOF,QAAQ,kBAAf,wCACA,2BAAOC,UAAU,eAAeM,KAAK,WAAWL,MAAOb,KAAKf,MAAMC,SAC3D4B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAC9B,SAAU6B,EAAEE,OAAOJ,aAGlE,kBAACf,EAAA,EAAMqB,OAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAASzB,GAAjC,8CACA,kBAACuB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAStB,KAAKhB,OAAxC,wC,GA5DKuC,IAAMC,WCGhBC,EALCF,IAAMG,cAAc,CAChCC,SAAU,EACVC,eAAgB,ICEdtB,E,YACF,WAAYvB,GAAQ,IAAD,8BACf,4CAAMA,KAOV8C,YAAc,WACV,EAAKb,SAAS,CACVc,WAAW,KAVA,EAcnBC,YAAc,WACV,EAAKf,SAAS,CACVc,WAAW,KAbf,EAAK7C,MAAQ,CACT6C,WAAW,GAJA,E,sEAqBf,IAAME,GAAWhC,KAAKiC,QAAQN,SAC1B,uBAAGO,KAAK,mBAAkB,uBAAGtB,UAAU,sCAAsCuB,cAAY,SAAzF,kCACA,0BAAMvB,UAAU,iBAAiBU,QAAStB,KAAK+B,aAAa,uBAAGnB,UAAU,sBACVuB,cAAY,SAD3E,kCAEJ,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOhB,QAAQ,OAAOT,UAAU,kCACvC,kBAACwB,EAAA,EAAOE,MAAR,yDACA,kBAACC,EAAA,EAAD,CAAK3B,UAAU,uBACX,0BAAMA,UAAU,kBACXoB,KAIb,kBAAC,EAAD,CAAYnC,OAAQG,KAAK6B,YAAa9B,KAAMC,KAAKf,MAAM6C,iB,GApClDP,IAAMC,WA0C3BlB,EAAOkC,YAAcf,EAENnB,QCFAmC,E,YA5CX,WAAY1D,GAAO,IAAD,8BACd,4CAAMA,KAOV2D,YAAc,WACV,EAAK3D,MAAM4D,WAAW,EAAK1D,MAAM2D,OANjC,EAAK3D,MAAQ,CACT2D,KAAM,EAAK7D,MAAM6D,MAJP,E,sEAaR,IAAD,OAGL,OACI,kBAAC9C,EAAA,EAAD,CACID,OAAQG,KAAKjB,MAAMc,OACnBE,KAAMC,KAAKjB,MAAMgB,KACjBE,KAAK,KACLC,kBAAgB,gCAChBC,SAAS,SACTC,UAAU,EACVC,UAAQ,GAER,kBAACP,EAAA,EAAMQ,OAAP,CAAcC,aAAW,GACrB,kBAACT,EAAA,EAAMU,MAAP,CAAaC,GAAG,iCAAhB,yFAIJ,kBAACX,EAAA,EAAMY,KAAP,KACI,mLACA,8BAAUE,UAAU,eAAeC,MAAOb,KAAKf,MAAM2D,KAAM9B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAC4B,KAAM7B,EAAEE,OAAOJ,YAE9G,kBAACf,EAAA,EAAMqB,OAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAStB,KAAKjB,MAAMc,QAA5C,8CACA,kBAACuB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAStB,KAAK0C,aAAxC,gE,GAtCQnB,IAAMC,WCG5BqB,E,YACF,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAOV+D,SAAW,SAACF,GACJA,GAAQ,EAAK7D,MAAMgE,KAAKH,KACxBzD,IAAM6D,IAAI,6CAA8C,CACpD,GAAM,EAAKjE,MAAMgE,KAAKtC,GACtB,KAAQmC,IACTvD,MAAK,SAACC,GACL,IAAIC,EAASD,EAAKA,KACdC,EAAOA,QACP,EAAK0D,YACLtD,MAAM,+KACN,EAAKZ,MAAMmE,eAEXvD,MAAMJ,EAAOK,YAIrBD,MAAM,mLAxBK,EA4BnBwD,aAAe,WACXhE,IAAM6D,IAAI,iDAAmD,EAAKjE,MAAMgE,KAAKtC,IACxEpB,MAAK,SAACC,GACH,IAAIC,EAASD,EAAKA,KACdC,EAAOA,QACP,EAAK0D,YACLtD,MAAM,gGACN,EAAKZ,MAAMmE,eAEXvD,MAAMJ,EAAOK,aArCV,EA0CnBkC,UAAY,WACR,EAAKd,SAAS,CACVc,WAAW,KA5CA,EAgDnBmB,UAAY,WACR,EAAKjC,SAAS,CACVc,WAAW,KA/Cf,EAAK7C,MAAQ,CACT6C,WAAW,GAJA,E,sEAuDf,IAAMH,KAAe3B,KAAKiC,QAAQN,SAC5BoB,EAAO/C,KAAKjB,MAAMgE,KAClBK,KAAaL,EAAKK,OACxB,OACI,oCACI,yBAAKxC,UAAU,iBAAiByC,MAAO,CAACC,gBAAkBF,EAAS,QAAU,SACzE,yBAAKxC,UAAU,OACX,qEAAamC,EAAKtC,IAClB,6HAAwBsC,EAAKQ,WAC7B,gEAAaR,EAAKS,YAClB,sEACA,yBAAK5C,UAAU,uBAAuBmC,EAAKH,MAC3C,kBAACxB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAStB,KAAK8B,WAAvC,kFACCsB,EACG,2HACAzB,GACA,kBAACP,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAStB,KAAKmD,cAAxC,6DAECJ,EAAKU,WAAc,2NAGhC,kBAAC,EAAD,CAAe1D,KAAMC,KAAKf,MAAM6C,UAAWjC,OAAQG,KAAKiD,UACzCN,WAAY3C,KAAK8C,SAAUF,KAAMG,EAAKH,Y,GA9ElDrB,IAAMC,WAoFzBqB,EAAKL,YAAcf,EAEJoB,Q,iBCnCAa,E,YApDX,WAAY3E,GAAO,IAAD,8BACd,4CAAMA,KASV4E,QAAU,WACH,EAAK1E,MAAMsE,WAAa,EAAKtE,MAAMuE,YAAc,EAAKvE,MAAM2D,KAC3DzD,IAAMC,KAAK,yCAAyC,EAAKH,OACpDI,MAAK,SAAAC,GACF,IAAIC,EAASD,EAAKA,KACfC,EAAOA,OACN,EAAKyB,SAAS,CACV4B,KAAM,KACR,WACEjD,MAAM,oKACN,EAAKZ,MAAMmE,iBAGfvD,MAAMJ,EAAOK,YAIzBD,MAAM,wGAxBV,EAAKV,MAAQ,CACTsE,UAAW,GACXC,WAAY,GACZZ,KAAM,IANI,E,sEA+BR,IAAD,OACL,OACI,6BACI,6BACI,8EACA,2BAAOhC,UAAU,eAAeM,KAAK,OAAO0C,YAAY,gEAAc/C,MAAOb,KAAKf,MAAMsE,UAAWzC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACuC,UAAWxC,EAAEE,OAAOJ,YAE3J,6BACI,0FACA,2BAAOD,UAAU,eAAeM,KAAK,OAAO0C,YAAY,sBAAsB/C,MAAOb,KAAKf,MAAMuE,WAAY1C,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACwC,WAAYzC,EAAEE,OAAOJ,YAErK,6BACI,iEACA,8BAAUD,UAAU,eAAegD,YAAY,0CAAY/C,MAAOb,KAAKf,MAAM2D,KAAM9B,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAC4B,KAAM7B,EAAEE,OAAOJ,YAEtI,kBAACO,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAStB,KAAK2D,SAAxC,yD,GA/CUpC,IAAMC,WCG1BqC,E,YACF,WAAY9E,GAAQ,IAAD,8BACf,4CAAMA,KAiBV+E,SAAW,WAAmB,IAAlBC,EAAiB,wDACzB5E,IAAMC,KAAK,0CAA2C,CAClD4E,MAAO,EAAK/E,MAAM+E,MAClBD,KAAMA,GAAQ,EAAK9E,MAAM8E,OAC1B1E,MAAK,SAAAC,GACJ,EAAK0B,SAAS,CACViD,MAAO3E,EAAKA,KAAK2E,MACjBC,aAAc5E,EAAKA,KAAK4E,mBAzBjB,EA8BnBC,WAAa,SAACJ,GACV,EAAK/C,SAAS,CACV+C,KAAMA,GACP,EAAKD,WAjCO,EAoCnBM,YAAc,WAA0C,IAAzCC,EAAwC,wDAAtBC,EAAsB,wDACnD,EAAKtD,UAAS,SAAC/B,GAAD,MAAY,CACtB+E,MAAO,CACHK,SAAUA,GAAYpF,EAAM+E,MAAMK,SAClCC,UAAWA,GAAarF,EAAM+E,MAAMM,eAExC,kBAAM,EAAKR,eAvCf,EAAK7E,MAAQ,CACTgF,MAAO,GACPC,aAAc,EACdF,MAAO,CACHK,SAAU,KACVC,UAAW,QAEfP,KAAM,GAVK,E,iFAef/D,KAAK8D,a,+BA+BC,IAAD,OACCG,EAAQjE,KAAKf,MAAMgF,MAAMM,KAAI,SAAAxB,GAC/B,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMyB,IAAKzB,EAAKtC,GAAIyC,YAAa,EAAKY,cAG7D,OACI,yBAAKlD,UAAU,iBACX,kBAAC,EAAD,CAAasC,YAAalD,KAAK8D,WAC/B,yBAAKlD,UAAU,8CACX,oGACA,yBAAKA,UAAU,QACX,4FACA,yBAAKA,UAAU,kCACX,2DACA,4BAAQA,UAAU,eAAeC,MAAOb,KAAKf,MAAM+E,MAAMK,SACjDvD,SAAU,SAACC,GAAD,OAAO,EAAKqD,YAAYrD,EAAEE,OAAOJ,OAAO,KACtD,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,aAAd,sBACA,4BAAQA,MAAM,cAAd,kCACA,4BAAQA,MAAM,UAAd,yCAEJ,qGACA,4BAAQD,UAAU,eAAeC,MAAOb,KAAKf,MAAM+E,MAAMM,UACjDxD,SAAU,SAACC,GAAD,OAAO,EAAKqD,aAAY,EAAOrD,EAAEE,OAAOJ,SACtD,4BAAQA,MAAM,QAAd,gEACA,4BAAQA,MAAM,OAAd,mEAIVb,KAAKf,MAAMiF,aAAe,GAC5B,kBAAC,IAAD,CACIO,WAAYzE,KAAKf,MAAM8E,KACvBW,kBAAmB1E,KAAKiC,QAAQL,eAChC+C,gBAAiB3E,KAAKf,MAAMiF,aAC5BU,mBAAoB,EACpB9D,SAAUd,KAAKmE,WACfU,UAAU,YACVC,UAAU,cACbb,EAAMc,OAASd,EAAQ,0FACtBjE,KAAKf,MAAMiF,aAAe,GAC5B,kBAAC,IAAD,CACIO,WAAYzE,KAAKf,MAAM8E,KACvBW,kBAAmB1E,KAAKiC,QAAQL,eAChC+C,gBAAiB3E,KAAKf,MAAMiF,aAC5BU,mBAAoB,EACpB9D,SAAUd,KAAKmE,WACfU,UAAU,YACVC,UAAU,oB,GA9FZvD,IAAMC,WAqG5BqC,EAAQrB,YAAcf,EAEPoC,QCvEAmB,E,YAhCX,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KAEDE,MAAQ,CACT0C,SAAU,EACVC,eAAgB,GALL,E,iFASE,IAAD,OAChBzC,IAAM8F,IAAI,8CACL5F,MAAK,SAACC,GACH,IAAIC,EAASD,EAAKA,KAClB,EAAK0B,SAAS,CACVW,SAAUpC,EAAOoC,SACjBC,eAAgBrC,EAAOqC,sB,+BAMnC,OACI,oCACI,kBAAC,EAAQsD,SAAT,CAAkBrE,MAAOb,KAAKf,OAC1B,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GA1BFsC,IAAMC,WCFxB2D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d5730657.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass LoginModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = getInitialState();\r\n    }\r\n\r\n    login = () => {\r\n        if(this.state.login && this.state.password){\r\n            axios.post('/?action=login', {\r\n                login: this.state.login,\r\n                password: this.state.password\r\n            }).then(data => {\r\n                if (data.data.result) {\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(data.data.message);\r\n                }\r\n            });\r\n        }else{\r\n            alert('Заполните поля!');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const onHide = () => {\r\n            this.props.onHide();\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                onHide={onHide}\r\n                show={this.props.show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Вход\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Введите учетные данные</h5>\r\n                    <div>\r\n                        <label htmlFor=\"login_login\">Почта</label>\r\n                        <input className=\"form-control\" value={this.state.login}\r\n                               onChange={(e) => this.setState({login: e.target.value})}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"login_password\">Пароль</label>\r\n                        <input className=\"form-control\" type=\"password\" value={this.state.password}\r\n                               onChange={(e) => this.setState({password: e.target.value})}/>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={onHide}>Закрыть</Button>\r\n                    <Button variant=\"success\" onClick={this.login}>Войти</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getInitialState() {\r\n    return {\r\n        login: '',\r\n        password: ''\r\n    }\r\n}\r\n\r\nexport default LoginModal;","import React from \"react\";\r\n\r\nconst Context = React.createContext({\r\n    is_admin: 0,\r\n    tasks_per_page: 0\r\n});\r\n\r\nexport default Context;","import React from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport LoginModal from '../components/LoginModal';\r\nimport Context from '../Context';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalShow: false\r\n        }\r\n    }\r\n\r\n    onModalHide = () => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    };\r\n\r\n    onModalShow = () => {\r\n        this.setState({\r\n            modalShow: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const icon = !!(+this.context.is_admin) ?\r\n            <a href=\"/?action=logout\"><i className=\"fa fa-lg fa-sign-out cursor-pointer\" aria-hidden=\"true\"/>Выйти</a> :\r\n            <span className=\"cursor-pointer\" onClick={this.onModalShow}><i className=\"fa fa-lg fa-sign-in\"\r\n                                                                           aria-hidden=\"true\"/>Войти</span>;\r\n        return (\r\n            <>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"d-flex justify-content-between\">\r\n                    <Navbar.Brand>Задачник</Navbar.Brand>\r\n                    <Nav className=\"header-icons d-flex\">\r\n                        <span className=\"cursor-pointer\">\r\n                            {icon}\r\n                        </span>\r\n                    </Nav>\r\n                </Navbar>\r\n                <LoginModal onHide={this.onModalHide} show={this.state.modalShow}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.contextType = Context;\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nclass EditTextModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: this.props.text\r\n        }\r\n    }\r\n\r\n    saveMessage = () => {\r\n        this.props.onEditSave(this.state.text);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Modal\r\n                onHide={this.props.onHide}\r\n                show={this.props.show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Редактирование\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h5>Введите новый текст задания</h5>\r\n                    <textarea className=\"form-control\" value={this.state.text} onChange={(e) => this.setState({text: e.target.value})}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={this.props.onHide}>Закрыть</Button>\r\n                    <Button variant=\"success\" onClick={this.saveMessage}>Сохранить</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditTextModal;","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport EditTextModal from './EditTextModal';\r\nimport Context from '../Context';\r\nimport axios from \"axios\";\r\n\r\nclass Task extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalShow: false,\r\n        }\r\n    }\r\n\r\n    editTask = (text) => {\r\n        if (text || this.props.task.text) {\r\n            axios.put('/?controller=Admin_api&action=editTaskText', {\r\n                'id': this.props.task.id,\r\n                'text': text\r\n            }).then((data) => {\r\n                let result = data.data;\r\n                if (result.result) {\r\n                    this.modalHide();\r\n                    alert('Задача успешно отредактирована!');\r\n                    this.props.reloadTasks();\r\n                } else {\r\n                    alert(result.message);\r\n                }\r\n            })\r\n        } else {\r\n            alert('Текст задачи не может быть пустым!');\r\n        }\r\n    };\r\n\r\n    completeTask = () => {\r\n        axios.put('/?controller=Admin_api&action=completeTask&id=' + this.props.task.id)\r\n            .then((data) => {\r\n                let result = data.data;\r\n                if (result.result) {\r\n                    this.modalHide();\r\n                    alert('Задача выполнена!');\r\n                    this.props.reloadTasks();\r\n                } else {\r\n                    alert(result.message);\r\n                }\r\n            })\r\n    };\r\n\r\n    modalShow = () => {\r\n        this.setState({\r\n            modalShow: true\r\n        });\r\n    };\r\n\r\n    modalHide = () => {\r\n        this.setState({\r\n            modalShow: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const is_admin = !!(+this.context.is_admin);\r\n        const task = this.props.task;\r\n        const status = !!(+task.status);\r\n        return (\r\n            <>\r\n                <div className=\"task-container\" style={{backgroundColor: (status ? 'green' : 'grey')}}>\r\n                    <div className=\"m-3\">\r\n                        <h4>Задача #{task.id}</h4>\r\n                        <h5>Имя пользователя - {task.user_name}</h5>\r\n                        <h5>Почта - {task.user_email}</h5>\r\n                        <h5>Задача: </h5>\r\n                        <div className=\"task-text-container\">{task.text}</div>\r\n                        <Button variant=\"danger\" onClick={this.modalShow}>Редактировать</Button>\r\n                        {status ?\r\n                            <h6>Задача выполнена</h6> :\r\n                            is_admin &&\r\n                            <Button variant=\"success\" onClick={this.completeTask}>Выполнить</Button>\r\n                        }\r\n                        {!!(+task.is_edited) && <legend>Отредактировано администратором</legend>}\r\n                    </div>\r\n                </div>\r\n                <EditTextModal show={this.state.modalShow} onHide={this.modalHide}\r\n                               onEditSave={this.editTask} text={task.text}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nTask.contextType = Context;\r\n\r\nexport default Task;","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\n\r\nclass AddTaskForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user_name: '',\r\n            user_email: '',\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    addTask = () => {\r\n        if(this.state.user_name && this.state.user_email && this.state.text){\r\n            axios.post('/?controller=Common_api&action=addTask',this.state)\r\n                .then(data => {\r\n                    let result = data.data;\r\n                    if(result.result){\r\n                        this.setState({\r\n                            text: ''\r\n                        },() => {\r\n                            alert('Задача была успешно добавлена!');\r\n                            this.props.reloadTasks();\r\n                        });\r\n                    }else{\r\n                        alert(result.message);\r\n                    }\r\n                });\r\n        }else{\r\n            alert('Заполните все поля!');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <label>Ваше имя</label>\r\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Иван Иванов\" value={this.state.user_name} onChange={(e) => this.setState({user_name: e.target.value})} />\r\n                </div>\r\n                <div>\r\n                    <label>Ваше почта</label>\r\n                    <input className=\"form-control\" type=\"text\" placeholder=\"example@example.com\" value={this.state.user_email} onChange={(e) => this.setState({user_email: e.target.value})} />\r\n                </div>\r\n                <div>\r\n                    <label>Текст</label>\r\n                    <textarea className=\"form-control\" placeholder=\"Задача...\" value={this.state.text} onChange={(e) => this.setState({text: e.target.value})} />\r\n                </div>\r\n                <Button variant=\"success\" onClick={this.addTask}>Добавить</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTaskForm;\r\n","import React from 'react';\r\nimport Task from '../components/Task';\r\nimport axios from 'axios';\r\nimport Pagination from 'react-js-pagination';\r\nimport AddTaskForm from \"../components/AddTaskForm\";\r\nimport Context from '../Context';\r\n\r\nclass Content extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            total_amount: 0,\r\n            order: {\r\n                order_by: 'id',\r\n                direction: 'DESC'\r\n            },\r\n            page: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTasks();\r\n    }\r\n\r\n    getTasks = (page = false) => {\r\n        axios.post('/?controller=Common_api&action=getTasks', {\r\n            order: this.state.order,\r\n            page: page || this.state.page\r\n        }).then(data => {\r\n            this.setState({\r\n                tasks: data.data.tasks,\r\n                total_amount: data.data.total_amount\r\n            });\r\n        });\r\n    };\r\n\r\n    pageChange = (page) => {\r\n        this.setState({\r\n            page: page\r\n        }, this.getTasks);\r\n    };\r\n\r\n    orderChange = (order_by = false, direction = false) => {\r\n        this.setState((state) => ({\r\n            order: {\r\n                order_by: order_by || state.order.order_by,\r\n                direction: direction || state.order.direction\r\n            }\r\n        }), () => this.getTasks());\r\n    };\r\n\r\n\r\n    render() {\r\n        const tasks = this.state.tasks.map(task => {\r\n            return <Task task={task} key={task.id} reloadTasks={this.getTasks}/>;\r\n        });\r\n\r\n        return (\r\n            <div className=\"content-field\">\r\n                <AddTaskForm reloadTasks={this.getTasks}/>\r\n                <div className=\"d-flex flex-column align-items-center my-3\">\r\n                    <h3>Список задач:</h3>\r\n                    <div className=\"my-2\">\r\n                        <h4>Сортировка</h4>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <label>Поле</label>\r\n                            <select className=\"form-control\" value={this.state.order.order_by}\r\n                                    onChange={(e) => this.orderChange(e.target.value, false)}>\r\n                                <option value=\"id\">ID</option>\r\n                                <option value=\"user_name\">Имя</option>\r\n                                <option value=\"user_email\">Почта</option>\r\n                                <option value=\"status\">Статус</option>\r\n                            </select>\r\n                            <label>Направление</label>\r\n                            <select className=\"form-control\" value={this.state.order.direction}\r\n                                    onChange={(e) => this.orderChange(false, e.target.value)}>\r\n                                <option value=\"DESC\">Нисходящая</option>\r\n                                <option value=\"ASC\">Восходящая</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {(this.state.total_amount > 3) &&\r\n                    <Pagination\r\n                        activePage={this.state.page}\r\n                        itemsCountPerPage={this.context.tasks_per_page}\r\n                        totalItemsCount={this.state.total_amount}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.pageChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"/>}\r\n                    {tasks.length ? tasks : <h5>Пока пусто :(</h5>}\r\n                    {(this.state.total_amount > 3) &&\r\n                    <Pagination\r\n                        activePage={this.state.page}\r\n                        itemsCountPerPage={this.context.tasks_per_page}\r\n                        totalItemsCount={this.state.total_amount}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.pageChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"/>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContent.contextType = Context;\r\n\r\nexport default Content;","import React from 'react';\nimport Header from './templates/Header';\nimport Content from './templates/Content';\nimport axios from 'axios';\nimport Context from './Context';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            is_admin: 0,\n            tasks_per_page: 0\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/?controller=Common_api&action=getInitInfo')\n            .then((data) => {\n                let result = data.data;\n                this.setState({\n                    is_admin: result.is_admin,\n                    tasks_per_page: result.tasks_per_page\n                })\n            })\n    }\n\n    render() {\n        return (\n            <>\n                <Context.Provider value={this.state}>\n                    <Header/>\n                    <Content/>\n                </Context.Provider>\n            </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}